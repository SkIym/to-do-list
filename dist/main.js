(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([e.id,":root {\n  --basic-layout-border: 1px solid black;\n}\n\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n/* #task-details {\n  display: none; \n} */\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sCAAsC;AACxC;;;AAGA;EACE,SAAS;EACT,UAAU;EACV,UAAU;AACZ;;AAEA,cAAc;;AAEd;EACE,aAAa;EACb,2CAA2C;EAC3C,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,kCAAkC;EAClC,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,kCAAkC;AACpC;;AAEA,qBAAqB;;AAErB;EACE,eAAe;EACf,uBAAuB;AACzB;;;AAGA,kBAAkB;;AAElB;;GAEG",sourcesContent:[":root {\n  --basic-layout-border: 1px solid black;\n}\n\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n/* #task-details {\n  display: none; \n} */\n"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},a=[],i=0;i<e.length;i++){var d=e[i],c=r.base?d[0]+r.base:d[0],l=s[c]||0,p="".concat(c," ").concat(l);s[c]=l+1;var u=n(p),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var h=o(m,r);r.byIndex=i,t.splice(i,0,{identifier:p,updater:h,references:1})}a.push(p)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var i=n(s[a]);t[i].references--}for(var d=r(e,o),c=0;c<s.length;c++){var l=n(s[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}s=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),s=n(569),a=n.n(s),i=n(565),d=n.n(i),c=n(216),l=n.n(c),p=n(589),u=n.n(p),m=n(426),h={};h.styleTagTransform=u(),h.setAttributes=d(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;class A{static appendChildren=(e,t=[])=>{t.forEach((t=>{e.appendChild(t)}))};static addId=(e,t)=>{e.id=t};static addClass=(e,t=[])=>{t.forEach((t=>{e.classList.add(t)}))};static addText=(e,t)=>{e.textContent=t};static addEvent=(e,t,n)=>{e.addEventListener(t,n)}}(()=>{const e=document.createElement("div");A.appendChildren(document.body,[e]),A.addId(e,"main-grid");const t=document.createElement("header");A.addId(t,"header"),A.addText(t,"TO-DO!");const n=document.createElement("div");A.addId(n,"overview");const r=document.createElement("div");A.addId(r,"project-display");const o=document.createElement("p");A.addText(o,"Your Projects");const s=document.createElement("div");A.addId(s,"project-items"),A.appendChildren(r,[o,s]);const a=document.createElement("div");A.addId(a,"add-project-container");const i=document.createElement("button");A.addId(i,"add-project"),A.addText(i,"Add new project"),A.appendChildren(a,[i]),A.appendChildren(n,[r,a]);const d=document.createElement("div");A.addId(d,"project-bench");const c=document.createElement("p");A.addText(c,"Create a project and start adding tasks!"),A.addId(c,"project-name");const l=document.createElement("div");A.addId(l,"task-display");const p=document.createElement("p");A.addText(p,"Your Tasks");const u=document.createElement("div");A.addId(u,"task-items"),A.appendChildren(l,[p,u]);const m=document.createElement("div");A.addId(m,"task-details");const h=document.createElement("div");h.id="task-title";const v=document.createElement("div");v.id="task-desc";const f=document.createElement("div");f.id="task-prio";const E=document.createElement("div");E.id="task-date";const C=document.createElement("div");C.id="task-notes";const g=document.createElement("div");g.id="task-checklist",A.appendChildren(m,[h,v,E,f,C,g]),A.appendChildren(d,[c,l,m]),A.appendChildren(e,[t,n,d])})();class v{constructor(e,t,n,r,o,s){this._title=e,this._description=t,this._dueDate=n,this._priority=r,this._notes=o,this._checklist=s}get title(){return this._title}set title(e){this._title=e}get description(){return this._description}set description(e){this._description=e}get dueDate(){return this._dueDate}set dueDate(e){this._dueDate=e}get priority(){return this._priority}set priority(e){this._priority=e}get notes(){return this._notes}set notes(e){this._notes=e}get checklist(){return this._checklist}set checklist(e){this._checklist=e}}class f{constructor(e){this.list=e,this.pdItems=document.getElementById("project-items")}renderProjects(){this.pdItems.innerHTML="";for(const e of this.list.projects){const t=document.createElement("div");A.addClass(t,["project-item"]),A.addText(t,`${e.name}`),A.appendChildren(this.pdItems,[t]),t.addEventListener("click",(()=>{new E(e).renderTasks()}))}}}class E{constructor(e){this.project=e,this.tdItems=document.getElementById("task-items"),this.name=document.getElementById("project-name")}renderTasks(){this.tdItems.innerHTML="",A.addText(this.name,this.project.name);for(const e of this.project.tasks){const t=document.createElement("div");t.innerHTML=`\n        <p>${e.title}<p>\n        <p>${e.dueDate}<p>\n      `,A.appendChildren(this.tdItems,[t])}const e=document.createElement("button");A.addId(e,"add-task"),A.addText(e,"Add new task"),e.addEventListener("click",(()=>{this.project.addTask(new v("0","1","2","3","4","5")),this.renderTasks(),console.log(this.project.tasks)})),this.tdItems.appendChild(e)}}class C{constructor(){this._projects=[]}get projects(){return this._projects}addProject(e){this._projects.push(e)}removeProject(e){this._projects=this._projects.filter((t=>t!==e))}}class g{constructor(e){this._name=e,this._tasks=[]}get name(){return this._name}set name(e){this._name=e}get tasks(){return this._tasks}addTask(e){this._tasks.push(e)}removeTask(e){this._tasks=this._tasks.filter((t=>tasks!==e))}}(new class{constructor(){this.list=new C,this.list.addProject(new g("Home")),this.list.addProject(new g("School")),this.listRenderer=new f(this.list),this.addEvents()}addEvents(){document.getElementById("add-project").addEventListener("click",(()=>{this.list.addProject(new g(prompt("Name?"))),this.render()}))}render(){this.listRenderer.renderProjects()}}).render()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,