(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(537),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([e.id,":root {\n  --basic-layout-border: 1px solid black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n.task-item {\n  display: flex;\n\n}\n\n#task-details {\n  display: none; \n  background-color: blanchedalmond;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sCAAsC;AACxC;;AAEA;EACE,SAAS;EACT,UAAU;EACV,UAAU;AACZ;;AAEA,cAAc;;AAEd;EACE,aAAa;EACb,2CAA2C;EAC3C,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,kCAAkC;EAClC,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,kCAAkC;AACpC;;AAEA,qBAAqB;;AAErB;EACE,eAAe;EACf,uBAAuB;AACzB;;;AAGA,kBAAkB;;AAElB;EACE,aAAa;;AAEf;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,kBAAkB;EAClB,SAAS;EACT,gCAAgC;AAClC",sourcesContent:[":root {\n  --basic-layout-border: 1px solid black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n.task-item {\n  display: flex;\n\n}\n\n#task-details {\n  display: none; \n  background-color: blanchedalmond;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n"],sourceRoot:""}]);const d=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},a=[],d=0;d<e.length;d++){var i=e[d],c=r.base?i[0]+r.base:i[0],l=s[c]||0,u="".concat(c," ").concat(l);s[c]=l+1;var p=n(u),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var h=o(m,r);r.byIndex=d,t.splice(d,0,{identifier:u,updater:h,references:1})}a.push(u)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var d=n(s[a]);t[d].references--}for(var i=r(e,o),c=0;c<s.length;c++){var l=n(s[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}s=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),s=n(569),a=n.n(s),d=n(565),i=n.n(d),c=n(216),l=n.n(c),u=n(589),p=n.n(u),m=n(426),h={};h.styleTagTransform=p(),h.setAttributes=i(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;class A{static appendChildren=(e,t=[])=>{t.forEach((t=>{e.appendChild(t)}))};static addId=(e,t)=>{e.id=t};static addClass=(e,t=[])=>{t.forEach((t=>{e.classList.add(t)}))};static addText=(e,t)=>{e.textContent=t};static toggleToFlex(e){e.style.display="none"==e.style.display?"flex":"none"}static toggleToBlock(e){e.style.display="none"==e.style.display?"block":"none"}}(()=>{const e=document.createElement("div");A.appendChildren(document.body,[e]),A.addId(e,"main-grid");const t=document.createElement("header");A.addId(t,"header"),A.addText(t,"TO-DO!");const n=document.createElement("div");A.addId(n,"overview");const r=document.createElement("div");A.addId(r,"project-display");const o=document.createElement("p");A.addText(o,"Your Projects");const s=document.createElement("div");A.addId(s,"project-items"),A.appendChildren(r,[o,s]);const a=document.createElement("div");A.addId(a,"add-project-container");const d=document.createElement("button");A.addId(d,"add-project"),A.addText(d,"Add new project"),A.appendChildren(a,[d]);const i=document.createElement("div");i.id="add-project-form",i.style.display="none";const c=document.createElement("input");c.type="text",c.id="add-project-input",c.pattern="[A-Za-z]+";const l=document.createElement("div");l.id="project-add-buttons";const u=document.createElement("button");u.textContent="Add",u.id="add-project-button";const p=document.createElement("button");p.textContent="Cancel",p.id="cancel-add-project-button",A.appendChildren(l,[u,p]),A.appendChildren(i,[c,l]),A.appendChildren(n,[r,a,i]);const m=document.createElement("div");A.addId(m,"project-bench");const h=document.createElement("p");A.addText(h,"Create a project and start adding tasks!"),A.addId(h,"project-name");const v=document.createElement("div");A.addId(v,"task-display");const E=document.createElement("p");A.addText(E,"Your Tasks");const k=document.createElement("div");A.addId(k,"task-items"),A.appendChildren(v,[E,k]);const f=document.createElement("button");f.id="add-task",f.textContent="Add new task";const g=document.createElement("div");A.addId(g,"task-details");const y=document.createElement("div");y.id="task-title";const C=document.createElement("div");C.id="task-desc";const b=document.createElement("div");b.id="task-prio";const j=document.createElement("div");j.id="task-date";const x=document.createElement("button");x.id="done-button-details",x.textContent="Done";const B=document.createElement("button");B.id="delete-task-button",B.textContent="Delete",A.appendChildren(g,[y,C,j,b,x,B]);const I=document.createElement("div");I.id="add-task-form",I.style.display="none";const T=document.createElement("input");T.id="task-title-input",T.type="text";const w=document.createElement("input");w.id="task-desc-input",w.type="text";const L=document.createElement("input");L.id="task-date-input",L.type="date";const _=document.createElement("select");_.id="task-prio-input";const D=document.createElement("option");D.textContent="High",D.value=3;const R=document.createElement("option");R.textContent="Mid",R.value=2;const P=document.createElement("option");P.textContent="Low",P.value=1,A.appendChildren(_,[D,R,P]);const S=document.createElement("div"),M=document.createElement("button");M.id="add-task-add",M.textContent="Add";const F=document.createElement("button");F.id="add-task-cancel",F.textContent="Cancel",A.appendChildren(S,[M,F]),A.appendChildren(I,[T,w,L,_,S]),A.appendChildren(m,[h,v,f,g,I]),A.appendChildren(e,[t,n,m])})();const v=document.getElementById("add-project-form"),E=document.getElementById("add-project"),k=document.getElementById("add-project-input"),f=document.getElementById("add-project-button"),g=document.getElementById("cancel-add-project-button"),y=document.getElementById("add-task"),C=document.getElementById("add-task-form"),b=document.getElementById("add-task-add"),j=document.getElementById("add-task-cancel"),x=document.getElementById("task-title-input"),B=document.getElementById("task-desc-input"),I=document.getElementById("task-date-input"),T=document.getElementById("task-prio-input"),w=document.getElementById("done-button-details"),L=document.getElementById("delete-task-button"),_=document.getElementById("task-details"),D=new class{constructor(){this.task=null,this.project=null,this.details=C,this.title=x,this.dueDate=I,this.desc=B,this.prio=T,this.edit=b}renderDetails(e,t){this.task=e,this.project=t,this.details.style.display="flex",this.edit.textContent="Done",this.title.value=`${this.task.title}`,this.desc.value=`${this.task.description}`,this.dueDate.value=`${this.task.dueDate}`,this.prio.value=`${this.task.priority}`}},R=new class{constructor(){this.tdItems=document.getElementById("task-items"),this.name=document.getElementById("project-name"),this.project=null}renderTasks(e){this.project=e,this.tdItems.innerHTML="",A.addText(this.name,e.name);let t=0;for(const n of e.tasks){const e=document.createElement("div");A.addClass(e,["task-item"]),e.innerHTML=`\n        <p>${n.title}</p>\n        <p>${n.dueDate}</p>\n      `;const r=document.createElement("button");r.textContent="Edit",r.id=`${t}`,r.classList.add("edit-task"),e.appendChild(r);const o=document.createElement("button");o.textContent="Complete",o.id=`${t}`,o.classList.add("check-task"),e.appendChild(o),this.tdItems.appendChild(e),t++}}},P=new class{constructor(){this._projects=[]}get projects(){return this._projects}getProject(e){return this._projects[e]}addProject(e){this._projects.push(e)}removeProject(e){this._projects=this._projects.filter((t=>t!==e))}},S=new class{constructor(e){this.list=e,this.pdItems=document.getElementById("project-items")}renderProjects(){this.pdItems.innerHTML="";let e=0;for(const t of this.list.projects){const n=document.createElement("div");n.classList.add("project-item"),n.textContent=`${t.name}`,A.appendChildren(this.pdItems,[n]),n.id=`${e}`,e++}}}(P);class M{constructor(e){this._name=e,this._tasks=[]}get name(){return this._name}set name(e){this._name=e}get tasks(){return this._tasks}getTask(e){return this._tasks[e]}addTask(e){this._tasks.push(e)}removeTask(e){this._tasks=this._tasks.filter((t=>t!==e))}}class F{constructor(e,t,n,r){this._title=e,this._description=t,this._dueDate=n,this._priority=r}get title(){return this._title}set title(e){this._title=e}get description(){return this._description}set description(e){this._description=e}get dueDate(){return this._dueDate}set dueDate(e){this._dueDate=e}get priority(){return this._priority}set priority(e){this._priority=e}}new class{constructor(){this.list=P,this.list.addProject(new M("Home")),this.list.addProject(new M("School")),this.listRenderer=S,this.projectRenderer=R,this.taskRenderer=D,this.renderList(),this.addEventsStatic(),this.addEventsDynamic()}addEventsStatic(){E.addEventListener("click",(()=>{this.refreshList()})),g.addEventListener("click",(()=>{this.refreshList()})),f.addEventListener("click",(()=>{this.list.addProject(new M(`${k.value}`)),k.value="",this.refreshList(),this.addEventsDynamic()})),y.addEventListener("click",(()=>{this.toggleTaskForm(),this.refreshTaskForm(),b.textContent="Add"})),b.addEventListener("click",(()=>{const e=this.projectRenderer.project,t=this.taskRenderer.task,n=x.value,r=B.value,o=I.value,s=T.value;console.log(t),t?(t.title=n,t.description=r,t.dueDate=o,t.priority=s):e.addTask(new F(n,r,o,s)),this.refreshProject(e),this.addEventsDynamic(),this.toggleTaskForm(),this.taskRenderer.task=null})),j.addEventListener("click",(()=>{this.toggleTaskForm()})),w.addEventListener("click",(()=>{this.hideDetails()})),L.addEventListener("click",(()=>{const e=this.taskRenderer.project,t=this.taskRenderer.task;e.removeTask(t),this.hideDetails(),this.refreshProject(e),this.addEventsDynamic()}))}addEventsDynamic(){document.querySelectorAll(".project-item").forEach((e=>{e.addEventListener("click",(()=>{this.refreshProject(P.getProject(e.id)),_.style.display="none"}))})),document.querySelectorAll(".check-task").forEach((e=>{e.addEventListener("click",(()=>{const t=this.projectRenderer.project;t.removeTask(t.getTask(e.id)),this.refreshProject(t),this.addEventsDynamic()}))})),document.querySelectorAll(".edit-task").forEach((e=>{e.addEventListener("click",(()=>{const t=this.projectRenderer.project,n=t.getTask(e.id);this.taskRenderer.task=n,this.taskRenderer.renderDetails(n,t)}))}))}renderList(){this.listRenderer.renderProjects()}refreshList(){this.renderList(),A.toggleToFlex(v),A.toggleToFlex(E)}refreshProject(e){this.projectRenderer.renderTasks(e)}hideDetails(){this.taskRenderer.details.style.display="none"}toggleTaskForm(){A.toggleToFlex(C)}refreshTaskForm(){x.value="",B.value="",I.value="",T.value=""}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,