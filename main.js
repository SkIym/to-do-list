(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(537),s=n.n(r),d=n(645),a=n.n(d)()(s());a.push([e.id,":root {\n  --basic-layout-border: 1px solid black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n.task-item {\n  display: flex;\n\n}\n\n#task-details {\n  display: none; \n  background-color: blanchedalmond;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sCAAsC;AACxC;;AAEA;EACE,SAAS;EACT,UAAU;EACV,UAAU;AACZ;;AAEA,cAAc;;AAEd;EACE,aAAa;EACb,2CAA2C;EAC3C,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,kCAAkC;AACpC;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,kCAAkC;EAClC,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,kCAAkC;AACpC;;AAEA,qBAAqB;;AAErB;EACE,eAAe;EACf,uBAAuB;AACzB;;;AAGA,kBAAkB;;AAElB;EACE,aAAa;;AAEf;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,kBAAkB;EAClB,SAAS;EACT,gCAAgC;AAClC",sourcesContent:[":root {\n  --basic-layout-border: 1px solid black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n}\n\n/* main grid */\n\n#main-grid {\n  display: grid;\n  grid-template-columns: max(15vw, 280px) 1fr;\n  grid-template-rows: 40px 1fr;\n  height: 100vh;\n}\n\n#header {\n  grid-column: 1 / 3;\n  border: var(--basic-layout-border);\n}\n\n#overview {\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n  border: var(--basic-layout-border);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#proj-bench {\n  border: var(--basic-layout-border);\n}\n\n/* project overview */\n\n.project-item:hover {\n  cursor: pointer;\n  background-color: beige;\n}\n\n\n/* project bench */\n\n.task-item {\n  display: flex;\n\n}\n\n#task-details {\n  display: none; \n  background-color: blanchedalmond;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n"],sourceRoot:""}]);const o=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,s,d){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),d="/*# ".concat(s," */");return[t].concat([d]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var d={},a=[],o=0;o<e.length;o++){var i=e[o],c=r.base?i[0]+r.base:i[0],l=d[c]||0,p="".concat(c," ").concat(l);d[c]=l+1;var u=n(p),h={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(h);else{var m=s(h,r);r.byIndex=o,t.splice(o,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var d=r(e=e||[],s=s||{});return function(e){e=e||[];for(var a=0;a<d.length;a++){var o=n(d[a]);t[o].references--}for(var i=r(e,s),c=0;c<d.length;c++){var l=n(d[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}d=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,s&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var d=n.sourceMap;d&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var d=t[r]={id:r,exports:{}};return e[r](d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),s=n.n(r),d=n(569),a=n.n(d),o=n(565),i=n.n(o),c=n(216),l=n.n(c),p=n(589),u=n.n(p),h=n(426),m={};m.styleTagTransform=u(),m.setAttributes=i(),m.insert=a().bind(null,"head"),m.domAPI=s(),m.insertStyleElement=l(),t()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;class A{static appendChildren=(e,t=[])=>{t.forEach((t=>{e.appendChild(t)}))};static addId=(e,t)=>{e.id=t};static addClass=(e,t=[])=>{t.forEach((t=>{e.classList.add(t)}))};static addText=(e,t)=>{e.textContent=t};static toggleToFlex(e){e.style.display="none"==e.style.display?"flex":"none"}static toggleToBlock(e){e.style.display="none"==e.style.display?"block":"none"}}(()=>{const e=document.createElement("div");A.appendChildren(document.body,[e]),A.addId(e,"main-grid");const t=document.createElement("header");A.addId(t,"header"),A.addText(t,"TO-DO!");const n=document.createElement("div");A.addId(n,"overview");const r=document.createElement("div");A.addId(r,"project-display");const s=document.createElement("p");A.addText(s,"Your Projects");const d=document.createElement("div");A.addId(d,"project-items"),A.appendChildren(r,[s,d]);const a=document.createElement("div");A.addId(a,"add-project-container");const o=document.createElement("button");A.addId(o,"add-project"),A.addText(o,"Add new project"),A.appendChildren(a,[o]);const i=document.createElement("div");i.id="add-project-form",i.style.display="none";const c=document.createElement("input");c.type="text",c.id="add-project-input",c.pattern="[A-Za-z]+";const l=document.createElement("div");l.id="project-add-buttons";const p=document.createElement("button");p.textContent="Add",p.id="add-project-button";const u=document.createElement("button");u.textContent="Cancel",u.id="cancel-add-project-button",A.appendChildren(l,[p,u]),A.appendChildren(i,[c,l]),A.appendChildren(n,[r,a,i]);const h=document.createElement("div");A.addId(h,"project-bench");const m=document.createElement("p");A.addText(m,"Create a project and start adding tasks!"),A.addId(m,"project-name");const k=document.createElement("div");A.addId(k,"task-display"),k.style.display="none";const v=document.createElement("p");A.addText(v,"Your Tasks");const E=document.createElement("div");A.addId(E,"task-items"),A.appendChildren(k,[v,E]);const f=document.createElement("button");f.id="add-task",f.textContent="Add new task",f.style.display="none";const y=document.createElement("div");y.id="add-task-form",y.style.display="none";const g=document.createElement("input");g.id="task-title-input",g.type="text";const C=document.createElement("input");C.id="task-desc-input",C.type="text";const j=document.createElement("input");j.id="task-date-input",j.type="date";const b=document.createElement("select");b.id="task-prio-input";const x=document.createElement("option");x.textContent="High",x.value=3;const B=document.createElement("option");B.textContent="Mid",B.value=2;const R=document.createElement("option");R.textContent="Low",R.value=1,A.appendChildren(b,[x,B,R]);const T=document.createElement("div"),I=document.createElement("button");I.id="add-task-add",I.textContent="Add";const P=document.createElement("button");P.id="add-task-cancel",P.textContent="Cancel";const w=document.createElement("button");w.id="delete-task-button",w.textContent="Delete",A.appendChildren(T,[I,P,w]),A.appendChildren(y,[g,C,j,b,T]),A.appendChildren(h,[m,k,f,y]),A.appendChildren(e,[t,n,h])})();const k=document.getElementById("add-project-form"),v=document.getElementById("add-project"),E=document.getElementById("add-project-input"),f=document.getElementById("add-project-button"),y=document.getElementById("cancel-add-project-button");function g(){return document.querySelectorAll(".project-item")}function C(){return document.querySelectorAll(".edit-task")}function j(){return document.querySelectorAll(".check-task")}const b=document.getElementById("task-display"),x=document.getElementById("add-task"),B=document.getElementById("add-task-form"),R=document.getElementById("add-task-add"),T=document.getElementById("add-task-cancel"),I=document.getElementById("task-title-input"),P=document.getElementById("task-desc-input"),w=document.getElementById("task-date-input"),L=document.getElementById("task-prio-input"),_=document.getElementById("delete-task-button");document.getElementById("task-details");const D=new class{constructor(){this.task=null,this.project=null,this.details=B,this.title=I,this.dueDate=w,this.desc=P,this.prio=L,this.edit=R,this.cancel=T,this.delete=_}renderDetails(e,t){this.task=e,this.project=t,this.details.style.display="flex",this.edit.textContent="Done",this.title.value=`${this.task.title}`,this.desc.value=`${this.task.description}`,this.dueDate.value=`${this.task.dueDate}`,this.prio.value=`${this.task.priority}`}},F=new class{constructor(){this.tdItems=document.getElementById("task-items"),this.name=document.getElementById("project-name"),this.project=null,this.taskDisplay=b,this.addTaskBtn=x,this.completeBtns=j(),this.editBtns=C()}renderTasks(e){this.project=e,this.tdItems.innerHTML="",A.addText(this.name,e.name);let t=0;for(const n of e.tasks){const e=document.createElement("div");A.addClass(e,["task-item"]),e.innerHTML=`\n        <p>${n.title}</p>\n        <p>${n.dueDate}</p>\n      `;const r=document.createElement("button");r.textContent="Edit",r.id=`${t}`,r.classList.add("edit-task"),e.appendChild(r);const s=document.createElement("button");s.textContent="Complete",s.id=`${t}`,s.classList.add("check-task"),e.appendChild(s),this.tdItems.appendChild(e),t++}this.completeBtns=j(),this.editBtns=C()}},S=new class{constructor(){this._projects=[]}get projects(){return this._projects}getProject(e){return this._projects[e]}addProject(e){this._projects.push(e)}removeProject(e){this._projects=this._projects.filter((t=>t!==e))}},M=new class{constructor(e){this.list=e,this.pdItems=document.getElementById("project-items"),this.addProjField=E,this.addProjectForm=k,this.addProjectBtn=v,this.addProjectCancel=y,this.addProjectAdd=f,this.projectItems=g()}renderProjects(){this.pdItems.innerHTML="";let e=0;for(const t of this.list.projects){const n=document.createElement("div");n.classList.add("project-item"),n.textContent=`${t.name}`,A.appendChildren(this.pdItems,[n]),n.id=`${e}`,e++}this.projectItems=g()}}(S);class ${constructor(e){this._name=e,this._tasks=[]}get name(){return this._name}set name(e){this._name=e}get tasks(){return this._tasks}getTask(e){return this._tasks[e]}addTask(e){this._tasks.push(e)}removeTask(e){this._tasks=this._tasks.filter((t=>t!==e))}}class U{constructor(e,t,n,r){this._title=e,this._description=t,this._dueDate=n,this._priority=r}get title(){return this._title}set title(e){this._title=e}get description(){return this._description}set description(e){this._description=e}get dueDate(){return this._dueDate}set dueDate(e){this._dueDate=e}get priority(){return this._priority}set priority(e){this._priority=e}}new class{constructor(){this.list=S,this.list.addProject(new $("Home")),this.list.addProject(new $("School")),this.listRenderer=M,this.projectRenderer=F,this.taskRenderer=D,this.renderList(),this.addEventsStatic(),this.updateProjects()}addEventsStatic(){this.listRenderer.addProjectBtn.addEventListener("click",(()=>{this.refreshList(),this.refreshProjectForm()})),this.listRenderer.addProjectCancel.addEventListener("click",(()=>{this.refreshList()})),this.listRenderer.addProjectAdd.addEventListener("click",(()=>{this.list.addProject(new $(`${this.listRenderer.addProjField.value}`)),this.refreshList(),this.updateProjects()})),this.projectRenderer.addTaskBtn.addEventListener("click",(()=>{this.toggleTaskForm(),this.refreshTaskForm(),this.taskAddMode()})),this.taskRenderer.edit.addEventListener("click",(()=>{const e=this.projectRenderer.project,t=this.taskRenderer.task,n=this.taskRenderer.title.value,r=this.taskRenderer.desc.value,s=this.taskRenderer.dueDate.value,d=this.taskRenderer.prio.value;t?(t.title=n,t.description=r,t.dueDate=s,t.priority=d):e.addTask(new U(n,r,s,d)),this.refreshProject(e),this.toggleTaskForm(),this.taskRenderer.task=null})),this.taskRenderer.cancel.addEventListener("click",(()=>{this.toggleTaskForm(),this.hideDetails()})),this.taskRenderer.delete.addEventListener("click",(()=>{const e=this.taskRenderer.project,t=this.taskRenderer.task;e.removeTask(t),this.hideDetails(),this.refreshProject(e),this.taskRenderer.task=null}))}updateProjects(){this.listRenderer.projectItems.forEach((e=>{e.addEventListener("click",(()=>{this.refreshProject(S.getProject(e.id)),this.loadProjectDisplay()}))}))}updateTasks(){this.projectRenderer.completeBtns.forEach((e=>{e.addEventListener("click",(()=>{const t=this.projectRenderer.project;t.removeTask(t.getTask(e.id)),this.refreshProject(t)}))})),this.projectRenderer.editBtns.forEach((e=>{e.addEventListener("click",(()=>{const t=this.projectRenderer.project,n=t.getTask(e.id);this.taskRenderer.task=n,this.taskRenderer.renderDetails(n,t),this.taskEditMode()}))}))}renderList(){this.listRenderer.renderProjects()}refreshList(){this.renderList(),this.refreshProjectForm(),A.toggleToFlex(this.listRenderer.addProjectForm),A.toggleToFlex(this.listRenderer.addProjectBtn)}refreshProject(e){this.projectRenderer.renderTasks(e),this.updateTasks()}hideDetails(){this.taskRenderer.details.style.display="none"}toggleTaskForm(){A.toggleToFlex(this.taskRenderer.details)}refreshTaskForm(){this.taskRenderer.title.value="",this.taskRenderer.desc.value="",this.taskRenderer.dueDate.value="",this.taskRenderer.prio.value=""}refreshProjectForm(){this.listRenderer.addProjField.value=""}loadProjectDisplay(){this.hideDetails(),this.projectRenderer.addTaskBtn.style.display="flex",this.projectRenderer.taskDisplay.style.display="flex"}taskEditMode(){this.taskRenderer.delete.style.display="block",this.taskRenderer.cancel.style.display="none"}taskAddMode(){this.taskRenderer.edit.textContent="Add",this.taskRenderer.delete.style.display="none",this.taskRenderer.cancel.style.display="block"}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,